:data-uri:
:toc2:
:labs: link:http://people.redhat.com/althomas/eap6/eap6CourseMaterial.html[Course Materials]

image::images/rhheader.png[width=900]

:numbered!:
[abstract]
== BPM Suite 6 Database Change
BPM Suite 6 is configured to use an H2 database out-of-the-box.  While this is perfect for demonstrations and learning the product, it is not
a recommended database to use for production servers.  This documents the steps required to change the database.

MySQL was used to create these notes.  The syntax for other databases, such as Oracle, will be different than the examples given below.
The cases where the syntax will be different are highlighted to make the differences clear.

While the database creation scripts are discussed here, the details of installing the database and running the scripts are different for each
database and platform and thus are not discussed in this document.

This document also assumes the use of JBoss EAP as the server for the installation of the BPM Suite 6 applications.

:numbered:

== Overview
The following major steps are discussed below:

* Create the Database
* Configure the Datasource in JBoss EAP
* Configure BPM Suite 6 to use the Datasource
* Additional considerations

== Create the Database
While it is possible to have Hibernate generate tables in the database, this is not an acceptable procedure for many, who prefer the traditional approach
of running ddl scripts to create the database.  For BPM Suite 6, the installation scripts can be found by downloading the *Supplementary Tools* for BPM Suite 6
from link:https://access.redhat.com[access.redhat.com]. The supplementary tools includes ddl scripts for the following databases:

* DB2
* H2
* MySQL5
* Oracle
* Postgresql
* Sqlserver

Add a user to the database with full CRUD privileges, to be used by BPM Suite 6.

[WARNING]
**********
Use version 6.0.2, or later, of these scripts.  Prior to version 6.0.2, the scripts are missing OPTLOCK fields in the BAMTaskSummary and TaskEvent tables.
**********

== Configure the Datasource in JBoss EAP
The default datasoure used by BPM Suite has the JNDI name: *java:jboss/datasources/ExampleDS*.  In the following, we replace this datasource with a datasource that points to our new database
created in the previous step.  

The following procedure uses a MySQL database as an example.

.Configuring a Datasource for JBoss Enterprise Platform 6
. Add a directory for the database to the JBoss Enterprise Application Platform 6 directory structure. The directory should be named for the database that will be used. 
For example, for a MySQL database create the following structure:

----------
$JBOSS_HOME/modules/system/layers/base/com/mysql/main
----------

where *$JBOSS_HOME* is the JBoss EAP installation directory containing the *bin* folder. In this example, only the *mysql* and *main* folders were added.

[start=2]
. Download the corresponding JBDC driver for the database. You can find the driver downloads for MySQL link:http://dev.mysql.com/downloads/connector/j/[here].
. Copy the JBDC driver into the *main* folder.
. Create a `module.xml` file and save it to *main* with the following content:

----------
<?xml version="1.0" encoding="UTF-8"?>
<module xmlns="urn:jboss:module:1.1" name="com.mysql"> <1>
    <resources>
        <resource-root path="mysql-connector-java-5.1.31-bin.jar"/> <2>
        <!-- Insert resources here -->
    </resources>
    <dependencies>
        <module name="javax.api"/>
        <module name="javax.transaction.api"/>
        <module name="javax.servlet.api" optional="true"/>
    </dependencies>
</module>
----------
<1> Use a value for the *name* attribute that corresponds with the path elements between the *base* folder and the *main* folder. In this example that cooresponds to *com.mysql*.
<2> Change the *path* element here to proint to the jar file added to the *main* folder.

[start=5]
. Edit the profile configuration file. For example, $JBOSS_HOME/standalone/configuration/standalone.xml. 
. Find the datasources section, illustrated below.
. Replace the *ExampleDS* datasource with a datasource pointing to the new database using the URL required to access the database and the username/password provided by the database administrator.

.An example datasource configuration for MySQL
----------
        <subsystem xmlns="urn:jboss:domain:datasources:1.1">
            <datasources>
                <datasource jta="true" jndi-name="java:jboss/datasources/jbpmDS" pool-name="jbpmDS_Pool" enabled="true" use-java-context="true" use-ccm="true">
                    <connection-url>jdbc:mysql://localhost:3306/jbpm</connection-url>
                    <driver>mysql</driver>
                    <pool>
                        <min-pool-size>2</min-pool-size>
                        <max-pool-size>20</max-pool-size>
                        <prefill>true</prefill>
                    </pool>
                    <security>
                        <user-name>jboss</user-name>
                        <password>jbosspw1!</password>
                    </security>
                </datasource>
                <drivers>
                    <driver name="mysql" module="com.mysql">
                        <xa-datasource-class>com.mysql.jdbc.jdbc2.optional.MySqlXADataDource</xa-datasource-class>
                        <driver-class>com.mysql.jdbc.Driver</driver-class>
                    </driver>
                </drivers>
            </datasources>
        </subsystem>
----------
<1> The *connection-url* value is specific to your database type and database name.  In this example, the MySQL database is named *jbpmDB*
<2> The *driver* element references a driver name in the *drivers* section below the *datasource* section
<3> Use the user name and password provided by your database administrator
<4> The *module* attribute value must match the module name used in the module.xml file.
<5> Consult the documentation for your database for the name of the appropriate datasource class to use.

[NOTE]
**********
It is a security problem to have clear text passwords in the configuration file.  To resolve this, JBoss EAP comes with a password vault that
enables the use of encrypted passwords in configuration files.  For more information on using the this feature see the online documentation
available link:https://access.redhat.com/site/documentation/en-US/JBoss_Enterprise_Application_Platform/6.3/html-single/Administration_and_Configuration_Guide/index.html#Configure_the_Enterprise_Application_Platform_to_Use_the_Password_Vault1[here].
**********

== Configure BPM Suite 6 to use the Datasource
In the previous step, a new datasource was added to JBoss EAP.  Before starting the server, use the following steps to configure BPM Suite 6 to use the new
datasource.

. Edit the $JBOSS_HOME/standalone/deployments/business-central-server.war/WEB-INF/classes/META-INF/persistence.xml file.
. Three items will require a change:
* The hibernate dialect
* The JNDI name to the datasource
* The hibernate hbm2ddl.auto value


----------
<jta-data-source>java:jboss/datasources/jbpmDS</jta-data-source> <1>
.
.
<property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect"/> <2>
.
.
<property name="hibernate.hbm2ddl.auto" value="none" /> <3>
----------
<1> Set the *jta-data-source* value to the JNDI name provided for the datasource added to JBoss EAP.
<2> Set the *hibernate.dialect* property to a value that is appropriate the database.
<3> Change the value of the *hibernate.hbm2ddl.auto* property to *none* 


[start=3]
. Edit dashbuilder.war/WEB-INF/jboss-web.xml to point to the new datasource:

----------
    <resource-ref>
        <res-ref-name>jdbc/dashbuilder</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <jndi-name>java:jboss/datasources/jbpmDS</jndi-name> <1>
    </resource-ref>
----------
<1> This should be the same value used in <1> above

[start=9]
. Edit $JBOSS_HOME/standalone/deployments/dashbuilder.war/WEB-INF/jboss-deployment-structure.xml to add a dependency on the new driver.  For example:

----------
<dependencies>
    <module name="com.mysql"/>
    ...
----------

[start=10]
.  Edit $JBOSS_HOME/standalone/deployments/dashbuilder.war/WEB-INF/jboss-web.xml.
. Change the *jndi-name* value to the JNDI name for the new datasource.  For example:

----------
<jndi-name>java:jboss/datasources/jbpmDS</jndi-name>
----------

After performing the above steps the BPM Suite 6 application is configured to use the new database. 


== Additional considerations
 
=== Database Foreign Keys
Some databases, such as, Oracle and Postgres, do not automatically create an index for each foreign key. This can result in deadlocks occurring. To avoid this situation it is necessary to create indexes on some of the columns that are referenced in foreign key constraints.

Indexes should be created on the following columns to avoid possible deadlocks and improve query performance:

.Human-Task schema:
* Task.processinstanceid
* task.processid
* task.status
* task.archived
* task.workitem
* i18ntext.language

.Core engine schema:
* eventtypes.instanceid

[[RHEL_CONFIG]]
=== Database setup steps for RHEL or Fedora
The following steps may be used to install MySQL on RHEL or Fedora.  Consult the link:http://dev.mysql.com/doc/[MySQL documentation] for more detailed installation instructions.


. install mysql or mariadb server
. install mysql-connector-java
. create a database in mariadb called:  jbpm
. create a mysql user called jbpm that has full permissions on the new jbpm database from the network address that your jboss jvm will bind to.  Something as follows will do  
.. grant all on jbpm.*to'jbpm'@'<my
 ip addr>'identifiedby'jbpm';
. download this and this sql scripts
. run these two sql scripts so that their content is loaded into the new jbpm database
. mkdir -p $JBOSS_HOME/system/layers/base/com/mysql/jdbc/main
. download this module.xml  and copy into $JBOSS_HOME/system/layers/base/com/mysql/jdbc/main
. ln -s /usr/share/java/mysql-connector-java.jar  $JBOSS_HOME/system/layers/base/com/mysql/jdbc/main
. edit $JBOSS_HOME/standalone/conf/standalone.xml
.. change your datasource subsystem such that it looks like this between lines:  131 - 155
. edit $JBOSS_HOME/standalone/deployments/business-central.war/WEB-INF/classes/META-INF/persistence.xml to change the following:
.. set  hibernate.dialect   to :   org.hibernate.dialect.MySQL5InnoDBDialect
.. set hibernate.hbm2ddl.auto to:  none
. bounce the jboss JVM.


